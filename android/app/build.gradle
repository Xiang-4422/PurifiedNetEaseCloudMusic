// 使用plugins块替代旧的apply plugin方式，这是Flutter 3.x推荐的Gradle配置方式
plugins {
    id "com.android.application"    // Android应用插件
    id "kotlin-android"             // Kotlin Android插件
    id "dev.flutter.flutter-gradle-plugin"  // Flutter Gradle插件
}

// 定义Kotlin版本
def kotlin_version = '2.1.20'

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader -> localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace "com.yu4422.purrr"
    compileSdkVersion 35
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // 指定应用的唯一标识符
        applicationId "com.yu4422.purrr"
        // 设置最低支持的Android SDK版本为21（Android 5.0 Lollipop）
        // 注释掉的是使用Flutter默认设置的方式
//        minSdkVersion flutter.minSdkVersion
        minSdkVersion 21
        // 设置目标SDK版本为33（Android 13）
        targetSdkVersion 33
        // 设置应用版本号和版本名称
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        // 注释掉的NDK配置，用于指定支持的CPU架构
//        ndk {
//            abiFilters 'armeabi-v7a', 'arm64-v8a'
//            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
//        }
        // 启用MultiDex支持，解决方法数超过65536的限制
        multiDexEnabled true
    }
    // 签名配置，用于应用发布时的签名
    signingConfigs {
        release {
            // 从key.properties文件中读取签名信息
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    // 构建类型配置
    buildTypes {
        release {
            // 禁用代码混淆
            minifyEnabled false
            // 禁用资源压缩
            shrinkResources false
            // 使用release签名配置
            signingConfig signingConfigs.release
        }
        debug {
            // 禁用代码混淆
            minifyEnabled false
            // 禁用资源压缩
            shrinkResources false
            // 调试版本也使用release签名配置
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

// 项目依赖配置
dependencies {
    // Kotlin标准库
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    // MultiDex支持库，用于解决方法数超过65536的限制
    implementation 'com.android.support:multidex:1.0.3'
    // 蓝牙Beacon库，用于蓝牙相关功能
    implementation 'org.altbeacon:android-beacon-library:2.19.3'
}
//[
//        Debug: null,
//        Profile: '--release',
//        Release: '--release'
//].each {
//    def taskPostfix = it.key
//    def profileMode = it.value
//    tasks.whenTaskAdded { task ->
//        if (task.name == "javaPreCompile$taskPostfix") {
//            task.dependsOn "cargoBuild$taskPostfix"
//        }
//    }
//    tasks.register("cargoBuild$taskPostfix", Exec) {
//        workingDir "../../rust/native"
//        environment ANDROID_NDK_HOME: "$ANDROID_NDK"
//        commandLine 'cargo', 'ndk',
//                // the 2 ABIs below are used by real Android devices
//                '-t', 'armeabi-v7a',
//                '-t', 'arm64-v8a',
//                // the below 2 ABIs are usually used for Android simulators,
//                // add or remove these ABIs as needed.
////                '-t', 'x86',
////                '-t', 'x86_64',
//                '-o', '../../android/app/src/main/jniLibs', 'build'
//        if (profileMode != null) {
//            args profileMode
//        }
//    }
//}
